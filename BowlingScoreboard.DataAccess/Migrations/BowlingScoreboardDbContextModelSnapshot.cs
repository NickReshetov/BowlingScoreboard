// <auto-generated />
using System;
using BowlingScoreboard.DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BowlingScoreboard.DataAccess.Migrations
{
    [DbContext(typeof(BowlingScoreboardDbContext))]
    partial class BowlingScoreboardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("LineId");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Line", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f16b43b-9dbe-4d87-8a2a-2abed4923b70"),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("64c30ed4-ab42-4f24-94d7-b45fbadcfb40"),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("a06e08f7-77be-465a-9346-dbfc82fe2a06"),
                            Number = 3
                        });
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("GameId");

                    b.Property<string>("Name");

                    b.Property<int>("PlayOrder");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.PlayerRound", b =>
                {
                    b.Property<Guid>("PlayerId");

                    b.Property<Guid>("RoundId");

                    b.HasKey("PlayerId", "RoundId");

                    b.HasIndex("RoundId");

                    b.ToTable("PlayersRounds");
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Roll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Number");

                    b.Property<Guid>("RoundId");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("Rolls");
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Round", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Number");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Game", b =>
                {
                    b.HasOne("BowlingScoreboard.DataAccess.EntityFramework.Entities.Line", "Line")
                        .WithMany("Games")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Player", b =>
                {
                    b.HasOne("BowlingScoreboard.DataAccess.EntityFramework.Entities.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.PlayerRound", b =>
                {
                    b.HasOne("BowlingScoreboard.DataAccess.EntityFramework.Entities.Player", "Player")
                        .WithMany("PlayersRounds")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BowlingScoreboard.DataAccess.EntityFramework.Entities.Round", "Round")
                        .WithMany("PlayersRounds")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BowlingScoreboard.DataAccess.EntityFramework.Entities.Roll", b =>
                {
                    b.HasOne("BowlingScoreboard.DataAccess.EntityFramework.Entities.Round", "Round")
                        .WithMany("Rolls")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
